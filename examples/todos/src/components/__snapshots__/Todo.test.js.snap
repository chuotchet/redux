// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Todo should match snapshot 1`] = `
Object {
  "props": Object {
    "completed": false,
    "createdTime": "2018-10-12 16:58:30",
    "onClick": [MockFunction],
    "text": "Test",
  },
  "wrapper": ShallowWrapper {
    Symbol(enzyme.__root__): [Circular],
    Symbol(enzyme.__unrendered__): <Todo
      completed={false}
      createdTime="2018-10-12 16:58:30"
      onClick={[MockFunction]}
      text="Test"
    />,
    Symbol(enzyme.__renderer__): Object {
      "batchedUpdates": [Function],
      "getNode": [Function],
      "render": [Function],
      "simulateError": [Function],
      "simulateEvent": [Function],
      "unmount": [Function],
    },
    Symbol(enzyme.__node__): Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "Test",
          " - ",
          "2018-10-12 16:58:30",
        ],
        "onClick": [MockFunction],
        "style": Object {
          "textDecoration": "none",
        },
      },
      "ref": null,
      "rendered": Array [
        "Test",
        " - ",
        "2018-10-12 16:58:30",
      ],
      "type": "li",
    },
    Symbol(enzyme.__nodes__): Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Test",
            " - ",
            "2018-10-12 16:58:30",
          ],
          "onClick": [MockFunction],
          "style": Object {
            "textDecoration": "none",
          },
        },
        "ref": null,
        "rendered": Array [
          "Test",
          " - ",
          "2018-10-12 16:58:30",
        ],
        "type": "li",
      },
    ],
    Symbol(enzyme.__options__): Object {
      "adapter": ReactSixteenAdapter {
        "options": Object {
          "enableComponentDidUpdateOnSetState": true,
          "lifecycles": Object {
            "componentDidUpdate": Object {
              "onSetState": true,
            },
            "getDerivedStateFromProps": true,
            "getSnapshotBeforeUpdate": true,
            "setState": Object {
              "skipsComponentDidUpdateOnNullish": true,
            },
          },
        },
      },
    },
  },
}
`;
